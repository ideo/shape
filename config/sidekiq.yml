---
:verbose: true
:namespace: sidekiq
:concurrency: 7
:queues:
  - [critical, 10]
  - [mailers, 5]
  - [searchkick, 4]
  - [default, 2]
  - [low, 1]

# Sidekiq scheduler setup, shared amongst all environments
:enabled: <%= ENV["SIDEKIQ_SCHEDULER_DISABLED"].nil? %>
default_schedule: &default_schedule
  searchkick_reindex_worker:
    every: '1m'
    class: SearchkickReindexWorker
    enabled: true # always enabled to ensure records are indexed
  notification_mention_mailer:
    every: '5m'
    class: NotificationMentionMailerWorker
  notification_mailer:
    every: '4h'
    class: NotificationMailerWorker

# env specific setup
development:
  :concurrency: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  :schedule:
    <<: *default_schedule
staging:
  :concurrency: 7
  :schedule:
    <<: *default_schedule
production:
  :concurrency: 10
  :schedule:
    <<: *default_schedule
    # we only schedule daily billing jobs on heroku envs (which includes heroku staging)
    network_create_usage_record:
      cron: '0 18 * * * America/Los_Angeles'
      class: DailyOrganizationUsageWorker
    # after NetworkCreateUsageRecordWorker
    trial_users_count_exceeded:
      cron: '5 18 * * * America/Los_Angeles'
      class: TrialUsersCountExceededWorker
    trial_expired:
      cron: '10 18 * * * America/Los_Angeles'
      class: TrialExpiredWorker
    trial_ending_soon:
      cron: '15 18 * * * America/Los_Angeles'
      class: TrialEndingSoonWorker
    mark_as_overdue:
      cron: '20 18 * * * America/Los_Angeles'
      class: MarkAsOverdueWorker
    overdue_notifier:
      cron: '25 18 * * * America/Los_Angeles'
      class: OverdueNotificationWorker
    charges_limit:
      cron: '30 18 * * * America/Los_Angeles'
      class: ChargesLimitWorker
    organization_shell_refresh:
      cron: '0 23 */2 * * America/Los_Angeles'
      class: OrganizationShellRefreshWorker
    log_app_metrics:
      cron: '*/10 * * * * America/Los_Angeles'
      class: LogChannelSubscribersWorker
